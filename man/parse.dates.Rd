% Generated by roxygen2 (4.1.0.9001): do not edit by hand
% Please edit documentation in R/parse.dates.R
\name{parse.dates}
\alias{parse.dates}
\alias{parse.dates.character}
\alias{parse.dates.data.frame}
\alias{parse.dates.data.table}
\alias{parse.dates.default}
\title{parse.dates}
\usage{
parse.dates(x, ...)

\method{parse.dates}{data.frame}(x, ...)

\method{parse.dates}{default}(x, ...)

\method{parse.dates}{character}(x, ...)

\method{parse.dates}{data.table}(x, ...)
}
\arguments{
\item{x}{object; the object to parse dates}

\item{...}{additional arguments passed to \code{utils::read.table}}
}
\value{
data frame or data table

\code{parse.dates} is an S3 generic function for parsing dates from an
existing object. For parsing dates while reading see
\code{\link[date.reader]{read.table}}.

If a character or factor column can be interpreted as dates, it is
coerces into POSIXct object
}
\description{
parse columns into
}
\examples{
name     <- c("bob", "fred", "sally")
  birthday.character <- c("01/22/1993", "02/25/1980", "03/31/1970")
  birthday.factor <- as.factor(birthday.character)

  df  <- data.frame( name, birthday.character, birthday.factor, stringsAsFactors=FALSE )
  res <- parse.dates(df)
  class( res$birthday.character )                # "POSIXct" "POSIXt"
  class( res$birthday.factor )

  dt <- setDT( df )
  parse.dates(dt)
  class( dt$birthday.character )                # "POSIXct" "POSIXt"
  class( dt$birthday.factor )
}
\seealso{
\code{\link[base]{as.POSIXct}}
}

