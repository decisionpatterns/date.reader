% Generated by roxygen2 (4.1.0.9001): do not edit by hand
% Please edit documentation in R/as.POSIXct.R
\name{as.POSIXct}
\alias{as.POSIXct}
\alias{string.to.POSIXct}
\title{as.POSIXct.character}
\usage{
as.POSIXct(x, tz = getOption("date.reader.tz"), ...)

string.to.POSIXct(x, orders, tz = getOption("date.reader.tz"))
}
\arguments{
\item{x}{character; vector to convert to a POSIX date}

\item{tz}{character; optional time zone}

\item{...}{list; other optional arguments (from as.POSIXct, ignored)}

\item{orders}{character; name of the format (e.g. 'ymd' ). If this parameter
is \code{NA}, then the function will try to guess the format. The possible
values for orders is the same as in \code{\link[lubridate]{parse_date_time}}}

\item{x}{character; vector to convert to a POSIX date}

\item{tz}{character; optional time zone}
}
\value{
POSIXct vector (or NA, if a value cannot be parsed)

POSIXct vector (or NA, if a value cannot be parsed)
}
\description{
Convers character to POSIXct

Convers character to POSIXct
}
\details{
- tk
}
\note{
The default timezone matches UTC like \code{lubridate} and not
  the default of \code{\link[base]{as.POSIXct}} from the base package.
}
\examples{
# -tk
 dts <- c( '20140210', '19791118', '19720329' )
 as.POSIXct( dts )

 dts <- rep( '20140210', 10 )
 as.POSIXct( dts )

 dts <- c( '14-02-10', '79-11-18' ) # FAIL(?)
 as.POSIXct( dts )
dts <- c( '20140210', '19791118', '19720329' )
  date.reader:::string.to.POSIXct( dts, NULL)

  dts <- rep( '20140210', 10 )
  date.reader:::string.to.POSIXct( dts, NULL )

  dts <- c( '14-02-10', '79-11-18' ) # FAIL(?)
  date.reader:::string.to.POSIXct( dts, NULL )

  date.reader:::string.to.POSIXct( dts, 'ymd' )
}
\seealso{
\code{\link[base]{as.POSIXct}} \cr
  \code{\link[base]{strptime}} for \code{format} strings
  \code{\link[lubridate]{parse_date_time}} for \code{orders} strings

\code{\link[base]{as.POSIXct}} \cr
  \code{\link[base]{strptime}} for \code{format} strings \cr
  \code{\link[lubridate]{parse_date_time}} for \code{orders} strings
}

